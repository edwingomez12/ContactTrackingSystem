@page "/addcandidate"
@using CandidateTracking.Data
@using CandidateTracking.Models
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject NavigationManager Navigation
@inject ApplicationDbContext DbContext
@inject IJSRuntime JSRuntime

<h3 class="page-title">Add Candidate</h3>

<EditForm Model="candidate" OnValidSubmit="HandleSubmit" class="form-container" FormName="candidateForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>First Name:</label>
        <InputText @bind-Value="candidate.FirstName" class="form-control" id="firstNameInput" />
    </div>
    <div class="form-group">
        <label>Last Name:</label>
        <InputText @bind-Value="candidate.LastName" class="form-control" />
    </div>
    <div class="form-group">
        <label>Email Address:</label>
        <InputText @bind-Value="candidate.EmailAddress" class="form-control" />
    </div>
    <div class="form-group">
        <label>Phone Number:</label>
        <InputText @bind-Value="candidate.PhoneNumber" class="form-control" />
    </div>
    <div class="form-group">
        <label>Residential Zip Code:</label>
        <InputText @bind-Value="candidate.ResidentialZipCode" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary submit-button">Add Candidate</button>
</EditForm>

<div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="successModalLabel">Success</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Candidate has been added successfully!
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@code {
    [SupplyParameterFromForm] 
    private Candidate? candidate { get; set; }
    protected override void OnInitialized() => candidate ??= new();

    private async Task HandleSubmit()
    {
        DbContext.Candidates.Add(candidate);
        await DbContext.SaveChangesAsync();
        Navigation.NavigateTo("/candidates");
    }
    
    private async Task ShowSuccessModal()
    {
        // Use JSInterop to show the modal
        await JSRuntime.InvokeVoidAsync("showModal", "successModal");
    }
}
