@page "/candidates"
@using CandidateTracking.Data
@using CandidateTracking.Models
@using Microsoft.EntityFrameworkCore;
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation

<h3 class="page-title">Candidates</h3>

<div class="form-group">
    <label for="searchInput">Search Candidates:</label>
    <InputText @bind-Value="searchTerm" class="form-control" id="searchInput" placeholder="Enter name or email..." />
</div>

@if (candidates != null)
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email Address</th>
                <th>Phone Number</th>
                <th>Zip Code</th>
            </tr>
        </thead>
        <tbody>
            @if (filteredCandidates.Any())
            {
                foreach (var candidate in filteredCandidates)
                {
                    <tr>
                        <td>@candidate.FirstName</td>
                        <td>@candidate.LastName</td>
                        <td>@candidate.EmailAddress</td>
                        <td>@candidate.PhoneNumber</td>
                        <td>@candidate.ResidentialZipCode</td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No candidates found.</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Loading candidates...</p>
}

@code {
    private List<Candidate> candidates = new();
    private string searchTerm = string.Empty;
    private IEnumerable<Candidate> filteredCandidates => 
        candidates.Where(c => 
            c.FirstName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) || 
            c.LastName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) || 
            c.EmailAddress.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));

    protected override async Task OnInitializedAsync()
    {
        candidates = await DbContext.Candidates.ToListAsync();
    }
}
